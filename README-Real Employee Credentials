# MotorPH Employee Portal - Individual Login System

## 🏢 Overview

The MotorPH Employee Portal provides secure individual access for all company employees to view their personal information, generate payslips, and manage their accounts. The system uses BCrypt encryption and integrates with your existing employee database.

## 🔐 Employee Login System Features

### For Employees:
- **🔑 Secure Individual Login** - Each employee gets unique credentials
- **👤 Personal Dashboard** - View employment details and personal information
- **📄 Payslip Generation** - Generate and download payslips for any pay period
- **🔒 Password Management** - Secure password change functionality
- **📞 Help & Support** - Built-in contact information for HR and IT

### For Administrators:
- **👨‍💼 Full Employee Management** - Complete admin interface
- **🔐 Credential Generation** - Generate login credentials for all employees
- **📊 System Administration** - Monitor and manage the employee portal
- **🔒 BCrypt Security** - Industry-standard password encryption

## 🚀 Quick Start Guide

### Prerequisites
- Java 11 or higher
- Maven 3.6 or higher
- Your employee CSV data file

### Step 1: Setup Dependencies

```bash
# Install Maven (on macOS)
brew install maven

# Navigate to project directory
cd /path/to/MO-IT103-MotorPHPayroll-plusGUI-CH-CZ

# Compile project with dependencies
mvn clean compile
```

### Step 2: Generate Employee Credentials

```bash
# Generate credentials for all your employees
mvn exec:java -Dexec.mainClass="motorph.gui.EmployeeCredentialsManager"
```

When prompted:
1. **Enter the full path** to your employee CSV file (e.g., `resources/Copy of MotorPH_Employee Data  Employee Details.csv`)
2. **Drag and drop** your CSV file into the terminal for easy path entry
3. **Confirm** the employee data preview

### Step 3: Launch Employee Portal

```bash
# Start the employee login system
mvn exec:java -Dexec.mainClass="motorph.gui.EmployeeLoginForm"
```

## 👥 Real Employee Credentials

### Credential Generation Process

The system automatically generates unique login credentials for **all employees** in your CSV database:

1. **Usernames**: Generated from employee names
   - Format: `firstname.lastname` (lowercase)
   - Example: Juan Dela Cruz → `juan.delacruz`
   - Duplicates handled automatically (e.g., `john.smith1`, `john.smith2`)

2. **Temporary Passwords**: Randomly generated secure passwords
   - Format: `MotorPH` + 4 random digits
   - Examples: `MotorPH1234`, `MotorPH5678`, `MotorPH9012`
   - **Different every time** you generate credentials

### Sample Output (Your Actual Employees)

When you generate credentials, you'll see output like:
```
🔐 Generating temporary credentials for 34 employees...

👤 Juan Dela Cruz (001) → Username: juan.delacruz, Temp Password: MotorPH1234
👤 Maria Santos (002) → Username: maria.santos, Temp Password: MotorPH5678
👤 Pedro Garcia (003) → Username: pedro.garcia, Temp Password: MotorPH9012
👤 Ana Rodriguez (004) → Username: ana.rodriguez, Temp Password: MotorPH3456
... (and all your other employees)

✅ Temporary credentials generated and saved!
```

## 🔒 Security Features

### Password Requirements
When employees change their temporary password, the new password must have:
- **Minimum 8 characters**
- **At least one uppercase letter** (A-Z)
- **At least one lowercase letter** (a-z)
- **At least one number** (0-9)

**Valid Examples**: `MyPassword123`, `SecureLogin2024`, `NewPass2025`

### Encryption
- **BCrypt hashing** with work factor 12
- **Secure password storage** - no plaintext passwords
- **Session management** - secure login/logout
- **Compatible with admin system** - same security standards

## 🧪 Testing the System

### First-Time Employee Login:
1. **Run the portal**: `mvn exec:java -Dexec.mainClass="motorph.gui.EmployeeLoginForm"`
2. **Use any generated credentials**:
   - Username: `juan.delacruz` (or any from your list)
   - Password: `MotorPH1234` (whatever was generated)
3. **System prompts password change** (required for security)
4. **Enter new password** meeting requirements
5. **Access employee dashboard** with personal information

### Subsequent Logins:
- Use the **same username**
- Use the **new permanent password** (not the temporary one)
- Direct access to dashboard (no password change required)

## 📋 Employee Dashboard Features

Once logged in, employees can:

### Personal Information
- View complete employment details
- See government ID numbers (SSS, PhilHealth, TIN, Pag-IBIG)
- Check contact information and address
- Review position and supervisor information

### Payslip Generation
- **Generate payslips** for any pay period
- **Choose year and month** (current and previous year available)
- **Select pay period** (1st half: 1-15th, 2nd half: 16th-end of month)
- **Download as text file** for personal records
- **Complete breakdown** of earnings, deductions, and net pay

### Account Management
- **Change password** securely
- **View profile** information
- **Get help and support** contact information
- **Logout** safely

## 🔧 Technical Details

### Project Structure
```
MO-IT103-MotorPHPayroll-plusGUI-CH-CZ/
├── src/motorph/gui/
│   ├── EmployeeLoginForm.java          # Main login interface
│   ├── EmployeeCredentialsManager.java # Credential management
│   ├── PasswordChangeDialog.java      # Password change UI
│   ├── EmployeeDashboard.java         # Individual dashboard
│   └── RealEmployeeCredentials.java   # Credential generator
├── src/motorph/employee/
│   ├── Employee.java                  # Employee data model
│   └── EmployeeDataReader.java        # CSV data reader
├── resources/
│   └── [Your Employee CSV File]       # Employee database
└── employee_credentials.txt            # Generated credentials (created automatically)
```

### Dependencies (pom.xml)
```xml
<dependencies>
    <dependency>
        <groupId>com.opencsv</groupId>
        <artifactId>opencsv</artifactId>
        <version>5.8</version>
    </dependency>
    <dependency>
        <groupId>org.mindrot</groupId>
        <artifactId>jbcrypt</artifactId>
        <version>0.4</version>
    </dependency>
</dependencies>
```

## 🛠️ Administration

### Generate New Credentials
If you need to regenerate credentials (e.g., after adding new employees):

```bash
# This will overwrite existing credentials
mvn exec:java -Dexec.mainClass="motorph.gui.EmployeeCredentialsManager"
```

### View Existing Credentials
Check the `employee_credentials.txt` file for a complete list of usernames and their status.

### Admin Portal Access
```bash
# Access the admin interface
mvn exec:java -Dexec.mainClass="motorph.gui.LoginForm"
```

## 📞 Support Information

### For Employees:
- **HR Department**: (02) 8123-4567 | hr@motorph.com
- **IT Support**: (02) 8123-4568 | it@motorph.com
- **Office Hours**: Monday - Friday, 8:00 AM - 5:00 PM

### For System Administrators:
- Use existing admin credentials for full system access
- Employee credential generation through admin interface
- System monitoring and user management tools

## 🚨 Troubleshooting

### Common Issues:

**"Invalid username or password"**
- Verify credentials were generated successfully
- Check `employee_credentials.txt` exists
- Ensure username is typed exactly (case-sensitive)
- Use the current temporary password (not old ones)

**"Could not load employee data"**
- Verify CSV file path is correct
- Check CSV file format matches expected structure
- Ensure CSV file is accessible and readable

**Password Change Fails**
- Verify current (temporary) password is correct
- Ensure new password meets all requirements
- Check that passwords match in both fields

**Maven/Compilation Issues**
```bash
# Clean and rebuild
mvn clean compile

# Verify dependencies
mvn dependency:tree
```

## 🔄 System Updates

### Adding New Employees:
1. Update your employee CSV file
2. Regenerate credentials: `mvn exec:java -Dexec.mainClass="motorph.gui.EmployeeCredentialsManager"`
3. Distribute new credentials to new employees

### Updating Employee Information:
1. Update CSV file with new information
2. Employee login credentials remain the same
3. Updated info will appear in their dashboard

## 🎯 Security Best Practices

### For Administrators:
- **Distribute credentials securely** - never email passwords
- **Regular password updates** - encourage employees to change passwords periodically
- **Monitor failed login attempts** - check for suspicious activity
- **Keep backups** - secure backup of credential files

### For Employees:
- **Change temporary passwords immediately** on first login
- **Use strong passwords** that meet all requirements
- **Never share credentials** with other employees
- **Logout properly** when finished using the system
- **Report issues** to IT support immediately

## 📈 System Statistics

- **Employee Capacity**: Supports all employees in your CSV database
- **Security Level**: BCrypt encryption with work factor 12
- **Compatibility**: Cross-platform (Windows, macOS, Linux)
- **Performance**: Optimized for fast login and data retrieval
- **Scalability**: Handles growing employee databases

## 🚀 Getting Started Checklist

- [ ] Install Java 11+ and Maven
- [ ] Verify employee CSV file is available
- [ ] Compile project: `mvn clean compile`
- [ ] Generate credentials: Run `EmployeeCredentialsManager`
- [ ] Note generated usernames and temporary passwords
- [ ] Test employee login: Run `EmployeeLoginForm`
- [ ] Test password change functionality
- [ ] Verify dashboard access and payslip generation
- [ ] Distribute credentials to employees securely

---

All employees can now securely access their personal information and generate payslips!
Secure Individual Employee Access System with Real Employee Integration
MotorPH Employee Portal v3.0

All rights reserved 2025. 
MotorPH Payroll GUI System is Computer Programming 2 Project 
by Czarina Salazar (QA) & Cherwin Fernandez (Lead Developer)
